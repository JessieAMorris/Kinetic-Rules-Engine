#
# Kynetx KOBJ Apache configuration
#
# do not edit this file; auto-generated by install-httpd-conf.pl
#
# Timestamp: <TMPL_VAR NAME=GEN_DATE>
#

ServerRoot "/web"

#
#
# Timeout: The number of seconds before receives and sends time out.
#
Timeout 20

#
# KeepAlive: Whether or not to allow persistent connections (more than
# one request per connection). Set to "Off" to deactivate.
#
KeepAlive On


#
# MaxKeepAliveRequests: The maximum number of requests to allow
# during a persistent connection. Set to 0 to allow an unlimited amount.
# We recommend you leave this number high, for maximum performance.
#
MaxKeepAliveRequests 100

#
# KeepAliveTimeout: Number of seconds to wait for the next request from the
# same client on the same connection.
#
KeepAliveTimeout 5

# Server-Pool Management (MPM specific)
#

#
# PidFile: The file in which the server should record its process
# identification number when it starts.
#
# Note that this is the default PidFile for most MPMs.
#
PidFile "logs/httpd.pid"

#
# The accept serialization lock file MUST BE STORED ON A LOCAL DISK.
#
LockFile "logs/accept.lock"

#
# Only one of the below sections will be relevant on your
# installed httpd.  Use "apachectl -l" to find out the
# active mpm.
#

# KServers use prefork at present
# Ruleset servers have larger images (30Mb) and so have a lower MaxClient


# prefork MPM
# StartServers: number of server processes to start
# MinSpareServers: minimum number of server processes which are kept spare
# MaxSpareServers: maximum number of server processes which are kept spare
# MaxClients: maximum number of server processes allowed to start
# MaxRequestsPerChild: maximum number of requests a server process serves
<IfModule mpm_prefork_module>
    StartServers          1
    MinSpareServers       1
    MaxSpareServers       5
    MaxClients      	  <TMPL_VAR NAME=MAX_SERVERS>
    MaxRequestsPerChild   <TMPL_VAR NAME=MAX_REQUESTS_PER_CHILD>
</IfModule>

# worker MPM
# StartServers: initial number of server processes to start
# MaxClients: maximum number of simultaneous client connections
# MinSpareThreads: minimum number of worker threads which are kept spare
# MaxSpareThreads: maximum number of worker threads which are kept spare
# ThreadsPerChild: constant number of worker threads in each server process
# MaxRequestsPerChild: maximum number of requests a server process serves
<IfModule mpm_worker_module>
    StartServers          2
    MaxClients          150
    MinSpareThreads      25
    MaxSpareThreads      75
    ThreadsPerChild      25
    MaxRequestsPerChild   0
</IfModule>


#
# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, instead of the default. See also the <VirtualHost>
# directive.
#
# Change this to Listen on specific IP addresses as shown below to
# prevent Apache from glomming onto all bound IP addresses.
#
#Listen 12.34.56.78:80
Listen 80

#
# Dynamic Shared Object (DSO) Support
#

<IfModule !perl_module>
LoadModule perl_module modules/mod_perl.so
</ifModule>

LoadModule deflate_module modules/mod_deflate.so
LoadModule expires_module modules/mod_expires.so
LoadModule headers_module modules/mod_headers.so

<TMPL_IF NAME="INCLUDE_SVN">
LoadModule dav_module   modules/mod_dav.so
LoadModule dav_svn_module     modules/mod_dav_svn.so
LoadModule authz_svn_module   modules/mod_authz_svn.so
</TMPL_IF>

<IfModule !mpm_netware_module>
User web
Group web
</IfModule>

ServerAdmin <TMPL_VAR NAME=SERVER_ADMIN>

ServerName <TMPL_VAR NAME=HOSTNAME>:80

# Added by QWB to protect against CVE-2011-3192
RequestHeader unset Range

# Added 

DocumentRoot "/web/htdocs"

<Directory />
    Options FollowSymLinks
    AllowOverride None
    Order deny,allow
    Deny from all
</Directory>

#
# This should be changed to whatever you set DocumentRoot to.
# This is VERY restrictive since we won't be serving up static
# content other than JS files
#
<Directory "/web/htdocs">
    Options None
    AllowOverride None
    Order allow,deny
    Allow from all

<IfModule mod_rewrite.c>
RewriteEngine on
#    RewriteLog "/web/logs/rewrite.log"
#    RewriteLogLevel 5

# redirect everything that's not a .js file to kynetx.com
RewriteRule	  !^.*\.(js|xml)$	$1 [R]
RewriteRule   ^(.*)$ <TMPL_VAR NAME=KNS_LANDING_PAGE>


</IfModule>

</Directory>

#
# DirectoryIndex: sets the file that Apache will serve if a directory
# is requested.
#
<IfModule dir_module>
    DirectoryIndex index.html
</IfModule>

#
# The following lines prevent .htaccess and .htpasswd files from being
# viewed by Web clients.
#
<FilesMatch "^\.ht">
    Order allow,deny
    Deny from all
    Satisfy All
</FilesMatch>

# logging all happens in the http-perl.conf file

<IfModule alias_module>
    #
    # Redirect: Allows you to tell clients about documents that used to
    # exist in your server's namespace, but do not anymore. The client
    # will make a new request for the document at its new location.
    # Example:
    # Redirect permanent /foo http://www.example.com/bar

Redirect permanent /index.html <TMPL_VAR NAME=KNS_LANDING_PAGE>

    #
    # Alias: Maps web paths into filesystem paths and is used to
    # access content that does not live under the DocumentRoot.
    # Example:
    # Alias /webpath /full/filesystem/path
    #
    # If you include a trailing / on /webpath then the server will
    # require it to be present in the URL.  You will also likely
    # need to provide a <Directory> section to allow access to
    # the filesystem path.

    #
    # ScriptAlias: This controls which directories contain server scripts.
    # ScriptAliases are essentially the same as Aliases, except that
    # documents in the target directory are treated as applications and
    # run by the server when requested rather than as documents sent to the
    # client.  The same rules about trailing "/" apply to ScriptAlias
    # directives as to Alias.
    #
#    ScriptAlias /cgi-bin/ "/web/cgi-bin/"

</IfModule>

# DefaultType: the default MIME type the server will use for a document
# if it cannot otherwise determine one, such as from filename extensions.
DefaultType text/javascript

<IfModule mime_module>
    #
    # TypesConfig points to the file containing the list of mappings from
    # filename extension to MIME-type.
    #
    TypesConfig conf/mime.types

    #
    # AddType allows you to add to or override the MIME configuration
    # file specified in TypesConfig for specific file types.
    #
    #AddType application/x-gzip .tgz
    #
    # AddEncoding allows you to have certain browsers uncompress
    # information on the fly. Note: Not all browsers support this.
    #
    #AddEncoding x-compress .Z
    #AddEncoding x-gzip .gz .tgz
    #
    # If the AddEncoding directives above are commented-out, then you
    # probably should define those extensions to indicate media types:
    #
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz

    #
    # AddHandler allows you to map certain file extensions to "handlers":
    # actions unrelated to filetype. These can be either built into the server
    # or added with the Action directive (see below)
    #
    # To use CGI scripts outside of ScriptAliased directories:
    # (You will also need to add "ExecCGI" to the "Options" directive.)
    #
    # AddHandler cgi-script .cgi

    # For type maps (negotiated resources):
    #AddHandler type-map var

    #
    # Filters allow you to process content before it is sent to the client.
    #
    # To parse .shtml files for server-side includes (SSI):
    # (You will also need to add "Includes" to the "Options" directive.)
    #
    #AddType text/html .shtml
    #AddOutputFilter INCLUDES .shtml
</IfModule>

#
# Customizable error responses come in three flavors:
# 1) plain text 2) local redirects 3) external redirects
#
ErrorDocument 500 "<TMPL_VAR NAME=KNS_ERROR_MSG>"
<TMPL_IF NAME="API_KRL">
ErrorDocument 404 default
<TMPL_ELSE>
ErrorDocument 404 "<TMPL_VAR NAME=KNS_ERROR_MSG>"
</TMPL_IF>

#
# Supplemental configuration
#
# We load this explicitly now so we can
# Server-pool management (MPM specific)
# Include conf/extra/httpd-mpm.conf

# Real-time info on requests and configuration
Include conf/extra/httpd-info.conf

# Secure (SSL/TLS) connections
#Include conf/extra/httpd-ssl.conf
#
# Note: The following must must be present to support
#       starting without SSL on platforms with no /dev/random equivalent
#       but a statically compiled-in mod_ssl.
#
<IfModule ssl_module>
SSLRandomSeed startup builtin
SSLRandomSeed connect builtin
</IfModule>

# Perl stuff specific to Kynetx module implementation

LoadModule apreq_module /web/modules/mod_apreq2.so

<TMPL_IF NAME="API_KRL">
PerlRequire <TMPL_VAR NAME=KOBJ_ROOT>/startup-krl.pl
<TMPL_ELSE>
PerlRequire <TMPL_VAR NAME=KOBJ_ROOT>/startup.pl
</TMPL_IF>

PerlWarn <TMPL_VAR NAME=PERL_WARNINGS>

# support client IP address in XFF header, if needed
# PerlSetVar  xForwardedForRequire 1  # only work behind a proxy...
PerlPostReadRequestHandler Apache2::xForwardedFor

# Tell each apache (forked) process to create their own connection to the VM
PerlChildInitHandler Kynetx::JavaReconnect

#
# We set up logging for various servers differently depending on type
# Which logging happens depends on conditional logging via an env var
# Env vars are set in the sections specific to each server type below
#

# error logging, unconditional
ErrorLog "|/web/sbin/cronolog --symlink=/web/logs/error_log /web/logs/%Y/%m/%d/errors.log"
# LogLevel: Control the number of messages logged to the error_log.
LogLevel error

# logging for INIT, KRL, and FRAG
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %{X-Forwarded-For}i %{METHOD}e" combined
CustomLog "|/web/sbin/cronolog --period=<TMPL_VAR NAME=LOG_PERIOD> --symlink=/web/logs/init_log /web/logs/kynetx/INIT-%Y%m%d-%H%M.log" combined env=INIT
CustomLog "|/web/sbin/cronolog --period=<TMPL_VAR NAME=LOG_PERIOD> --symlink=/web/logs/frag_log /web/logs/kynetx/FRAG-%Y%m%d-%H%M.log" combined env=FRAG


#LogFormat "%h %t %{TOTAL_SECS}e %{METHOD}e %{RIDS}e " KRL
CustomLog "|/web/sbin/cronolog --period=<TMPL_VAR NAME=LOG_PERIOD> --symlink=/web/logs/krl_log /web/logs/kynetx/KRL-%Y%m%d-%H%M.log" combined env=KRL

# rule logging for RULESET
LogFormat "%h %t %{TOTAL_SECS}e %{METHOD}e %{RIDS}e %{TXN_ID}e \"%{CALLER}e\" %{SID}e \"%{REFERER}e\" \"%{TITLE}e\" [%{RULE_NAMES}e] [%{RESULTS}e] [%{ACTIONS}e] [%{TAGS}e] [%{LABELS}e] " KOBJ
CustomLog "|/web/sbin/cronolog --period=<TMPL_VAR NAME=LOG_PERIOD> --symlink=/web/logs/kynetx_log /web/logs/kynetx/KOBJ-%Y%m%d-%H%M.log" KOBJ env=KOBJ

# rule logging for EVENTS
LogFormat "%h %t %{TOTAL_SECS}e %{DOMAIN}e %{EVENTTYPE}e %{RIDS}e %{TXN_ID}e \"%{CALLER}e\" %{SID}e [%{RULE_NAMES}e] [%{RESULTS}e] [%{ACTIONS}e] [%{TAGS}e] [%{LABELS}e] " EVENT
CustomLog "|/web/sbin/cronolog --period=<TMPL_VAR NAME=LOG_PERIOD> --symlink=/web/logs/event_log /web/logs/kynetx/EVENT-%Y%m%d-%H%M.log" EVENT env=EVENT

# callback logging for CALLBACK
LogFormat "%h %t %{TOTAL_SECS}e %{METHOD}e %{RIDS}e %{TXN_ID}e \"%{RULE_NAME}e\" \"%{CALLER}e\" %{SID}e %{TYPE}e \"%{ELEMENT}e\" \"%{SENSE}e\" \"%{CB_INFO}e\" %{RID}e " CB
CustomLog "|/web/sbin/cronolog --period=<TMPL_VAR NAME=LOG_PERIOD> --symlink=/web/logs/callback_log /web/logs/kynetx/CB-%Y%m%d-%H%M.log" CB env=CB

# logging billable RSEs for billing purposes
LogFormat "%h %t %{METHOD}e %{RIDS}e %{TXN_ID}e [%{RULE_NAMES}e] [%{RESULTS}e]" RSE
CustomLog "|/web/sbin/cronolog --period=1day --symlink=/web/logs/billing_log /web/logs/kynetx/AUDIT-%Y%m%d-%H%M.log" RSE env=RSE

# rule logging for CLOUDID
LogFormat "%h %t %{TOTAL_SECS}e %{METHOD}e %{RIDS}e %{TXN_ID}e \"%{CALLER}e\" %{SID}e \"%{REFERER}e\" \"%{TITLE}e\" [%{RULE_NAMES}e] [%{RESULTS}e] [%{ACTIONS}e] [%{TAGS}e] [%{LABELS}e] " CLOUD
CustomLog "|/web/sbin/cronolog --period=<TMPL_VAR NAME=LOG_PERIOD> --symlink=/web/logs/cloud_log /web/logs/kynetx/CLOUD-%Y%m%d-%H%M.log" CLOUD env=CLOUD

ExtendedStatus On
<Location /server-status>
SetHandler server-status

Order Deny,Allow
Deny from all
Allow from .kobj.net
</Location>


<TMPL_IF NAME="API_EVAL">

<LocationMatch /sky/(event|flush)/>
  # P3P compressed policy header
  Header append P3P "CP=\"NOI DSP CURa ADMo DEVo TAIo PSAo PSDo IVAo IVDo OUR BUS IND PHY ONL UNI PUR COM NAV DEM STA\""

  # env var to turn on rule logging
  PerlSetEnv EVENT 1
  SetHandler perl-script
  PerlHandler Kynetx::Sky

</LocationMatch>

<LocationMatch /sky/cloud/>
  # P3P compressed policy header
  Header append P3P "CP=\"NOI DSP CURa ADMo DEVo TAIo PSAo PSDo IVAo IVDo OUR BUS IND PHY ONL UNI PUR COM NAV DEM STA\""

  # env var to turn on rule logging
  PerlSetEnv EVENT 1
  SetHandler perl-script
  PerlHandler Kynetx::Cloud

</LocationMatch>

<LocationMatch /tenx/>
  # P3P compressed policy header
  Header append P3P "CP=\"NOI DSP CURa ADMo DEVo TAIo PSAo PSDo IVAo IVDo OUR BUS IND PHY ONL UNI PUR COM NAV DEM STA\""

  # env var to turn on rule logging
  PerlSetEnv KOBJ 1
  SetHandler perl-script
  PerlHandler Kynetx::Metrics::TENX

</LocationMatch>





<LocationMatch /blue/event/>
  # P3P compressed policy header
  Header append P3P "CP=\"NOI DSP CURa ADMo DEVo TAIo PSAo PSDo IVAo IVDo OUR BUS IND PHY ONL UNI PUR COM NAV DEM STA\""

  # env var to turn on rule logging
  PerlSetEnv KOBJ 1
  SetHandler perl-script
  PerlHandler Kynetx::Events

</LocationMatch>


<LocationMatch /ruleset/>
  # P3P compressed policy header
  Header append P3P "CP=\"NOI DSP CURa ADMo DEVo TAIo PSAo PSDo IVAo IVDo OUR BUS IND PHY ONL UNI PUR COM NAV DEM STA\""

  # env var to turn on rule logging
  PerlSetEnv KOBJ 1
  SetHandler perl-script
  PerlHandler Kynetx

</LocationMatch>

<LocationMatch /endpoint/>

  # env var to turn on logging
  PerlSetEnv KRL 1
  SetHandler perl-script
  PerlHandler Kynetx::Endpoints
</LocationMatch>

</TMPL_IF>
<TMPL_IF NAME="API_CALLBACK">
<LocationMatch /callback|log/>

  # P3P compressed policy header
  Header append P3P "CP=\"NOI DSP CURa ADMo DEVo TAIo PSAo PSDo IVAo IVDo OUR BUS IND PHY ONL UNI PUR COM NAV DEM STA\""

  # env var to turn on callback logging
  PerlSetEnv CB 1
  SetHandler perl-script
  PerlHandler Kynetx::Callbacks
</LocationMatch>

</TMPL_IF>

<TMPL_IF NAME="API_INIT">

<LocationMatch /blue/init/>
  # P3P compressed policy header
  Header append P3P "CP=\"NOI DSP CURa ADMo DEVo TAIo PSAo PSDo IVAo IVDo OUR BUS IND PHY ONL UNI PUR COM NAV DEM STA\""

  # env var to turn on rule logging
  PerlSetEnv INIT 1
  SetHandler perl-script
  PerlHandler Kynetx::KOBJ

</LocationMatch>


<LocationMatch /js/>

  # P3P compressed policy header
  Header append P3P "CP=\"NOI DSP CURa ADMo DEVo TAIo PSAo PSDo IVAo IVDo OUR BUS IND PHY ONL UNI PUR COM NAV DEM STA\""

  # Insert compression filter
  SetOutputFilter DEFLATE
  # Netscape 4.x has some problems...
  BrowserMatch ^Mozilla/4 gzip-only-text/html
  # Netscape 4.06-4.08 have some more problems
  BrowserMatch ^Mozilla/4\.0[678] no-gzip
  # MSIE masquerades as Netscape, but it is fine
  BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
  # Don't compress images
  SetEnvIfNoCase Request_URI \
      \.(?:gif|jpe?g|png)$ no-gzip dont-vary
  # Make sure proxies don't deliver the wrong content
  Header append Vary User-Agent env=!dont-vary
  # end configuring compression filter

  # send an expires header
  ExpiresActive On
  ExpiresDefault "access plus 24 hours"

  # env var to turn on INIT logging
  PerlSetEnv INIT 1
  SetHandler perl-script
  PerlHandler Kynetx::KOBJ
</LocationMatch>

</TMPL_IF>

<TMPL_IF NAME="API_KRL">
<LocationMatch /pdsold/>
  # P3P compressed policy header
  Header append P3P "CP=\"NOI DSP CURa ADMo DEVo TAIo PSAo PSDo IVAo IVDo OUR BUS IND PHY ONL UNI PUR COM NAV DEM STA\""

  # env var to turn on rule logging
  PerlSetEnv KRL 1
  SetHandler perl-script
  PerlHandler Kynetx::PersistentDataService

</LocationMatch>

<LocationMatch /manage/>

  # env var to turn on logging
  PerlSetEnv KRL 1
  SetHandler perl-script
  PerlHandler Kynetx::RuleManager
</LocationMatch>
</TMPL_IF>


<TMPL_IF NAME="INCLUDE_SVN">
<Location /rules>
  DAV svn
  SVNPath /web/svn/rule_repository/
  AuthType Basic
  AuthName "KRL Rule Repository"
  AuthUserFile /web/svn/rule_repository/conf/svn-auth-file
  Require valid-user
</Location>
</TMPL_IF>




<TMPL_IF NAME="API_FRAG">
Alias /widgets/ "/web/lib/perl/widgets/"
<Location /widgets>

  # env var to turn on logging
  PerlSetEnv FRAG 1

  SetHandler perl-script
  PerlResponseHandler ModPerl::Registry
  PerlOptions +ParseHeaders
  Options +ExecCGI
  Order allow,deny
  Allow from all
</Location>

<Location /widgets/components>
  SetHandler None
</Location>

#Include conf.d/*.conf
</TMPL_IF>


